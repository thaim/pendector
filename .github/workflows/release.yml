name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust

  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: pendector
            asset_name: pendector-linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: pendector
            asset_name: pendector-macos-aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Add build target
      run: rustup target add ${{ matrix.target }}

    - name: Setup Rust cache
      uses: swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux/macOS)
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Rename binary
      run: mv target/${{ matrix.target }}/release/${{ matrix.artifact_name }} target/${{ matrix.target }}/release/${{ matrix.asset_name }}

    - name: Upload binary to release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.release-please.outputs.tag_name }}
        files: target/${{ matrix.target }}/release/${{ matrix.asset_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

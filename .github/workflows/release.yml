name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: pendector
            asset_name: pendector-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: pendector
            asset_name: pendector-macos-x86_64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Add build target
      run: rustup target add ${{ matrix.target }}

    - name: Setup Rust cache
      uses: swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux/macOS)
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Upload binary to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
        overwrite: true

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract tag name
      id: tag_name
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Extract changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          sed -n "/^## \[${{ steps.tag_name.outputs.TAG_NAME }}\]/,/^## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
          if [ ! -s release_notes.md ]; then
            echo "Release ${{ steps.tag_name.outputs.TAG_NAME }}" > release_notes.md
          fi
        else
          echo "Release ${{ steps.tag_name.outputs.TAG_NAME }}" > release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
        name: Release ${{ steps.tag_name.outputs.TAG_NAME }}
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}